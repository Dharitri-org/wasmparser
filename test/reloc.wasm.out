(module
  (type $type0 (func (param i32)))
  (type $type1 (func (param i32) (result i32)))
  (type $type2 (func (result i32)))
  (import "env" "STACKTOP" (global $global0 i32))
  (table $table0 0 anyfunc)
  (memory (;0;) 4)
  (global $global1 (mut i32) (get_global $global0))
  (global $global2 i32 (i32.const 0))
  (export "l" (func $func0))
  (export "k" (func $func1))
  (export "kk" (func $func2))
  (export "test" (global $global2))
  (func $func0 (param $var0 i32)
    (local $var1 i32) (local $var2 i32) (local $var3 i32) (local $var4 i32) (local $var5 i32) (local $var6 i32) (local $var7 i32) (local $var8 i32) (local $var9 i32)
    get_global $global0
    set_local $var1
    i32.const 16
    set_local $var2
    get_local $var1
    get_local $var2
    i32.sub
    set_local $var3
    i32.const 0
    set_local $var4
    i32.const 1
    set_local $var5
    get_local $var3
    get_local $var0
    i32.store offset=12
    get_local $var3
    i32.load offset=12
    set_local $var6
    get_local $var6
    get_local $var5
    i32.store8
    get_local $var3
    i32.load offset=12
    set_local $var7
    get_local $var7
    get_local $var4
    i32.store8 offset=1
    get_local $var3
    i32.load offset=12
    set_local $var8
    get_local $var8
    get_local $var4
    i32.store8 offset=2
    get_local $var3
    i32.load offset=12
    set_local $var9
    get_local $var9
    get_local $var4
    i32.store8 offset=3
    return
  )
  (func $func1 (param $var0 i32) (result i32)
    (local $var1 i32) (local $var2 i32) (local $var3 i32) (local $var4 i32) (local $var5 i32) (local $var6 i32) (local $var7 i32) (local $var8 i32) (local $var9 i32) (local $var10 i32) (local $var11 i32) (local $var12 i32) (local $var13 i32) (local $var14 i32) (local $var15 i32) (local $var16 i32) (local $var17 i32) (local $var18 i32) (local $var19 i32) (local $var20 i32) (local $var21 i32) (local $var22 i32) (local $var23 i32)
    get_global $global0
    set_local $var1
    i32.const 16
    set_local $var2
    get_local $var1
    get_local $var2
    i32.sub
    set_local $var3
    get_local $var3
    set_global $global0
    i32.const 0
    set_local $var4
    i32.const 8
    set_local $var5
    get_local $var3
    get_local $var5
    i32.add
    set_local $var6
    get_local $var6
    set_local $var7
    get_local $var3
    get_local $var0
    i32.store offset=12
    get_local $var7
    call $func0
    get_local $var3
    i32.load offset=8
    set_local $var8
    get_local $var3
    i32.load offset=12
    set_local $var9
    get_local $var9
    set_local $var10
    get_local $var4
    set_local $var11
    get_local $var10
    get_local $var11
    i32.gt_s
    set_local $var12
    get_local $var12
    set_local $var13
    block $label1
      block $label0
        get_local $var13
        i32.eqz
        br_if $label0
        get_local $var3
        i32.load offset=12
        set_local $var14
        i32.const 1
        set_local $var15
        get_local $var14
        get_local $var15
        i32.sub
        set_local $var16
        get_local $var16
        call $func1
        set_local $var17
        get_local $var17
        set_local $var18
        br $label1
      end $label0
      i32.const 0
      set_local $var19
      get_local $var19
      set_local $var18
    end $label1
    get_local $var18
    set_local $var20
    get_local $var8
    get_local $var20
    i32.add
    set_local $var21
    i32.const 16
    set_local $var22
    get_local $var3
    get_local $var22
    i32.add
    set_local $var23
    get_local $var23
    set_global $global0
    get_local $var21
    return
  )
  (func $func2 (result i32)
    (local $var0 i32) (local $var1 i32) (local $var2 i32) (local $var3 i32) (local $var4 i32) (local $var5 i32)
    i32.const 3
    set_local $var0
    i32.const 0
    set_local $var1
    get_local $var1
    call $func0
    i32.const 0
    set_local $var2
    get_local $var2
    i32.load
    set_local $var3
    get_local $var0
    call $func1
    set_local $var4
    get_local $var3
    get_local $var4
    i32.add
    set_local $var5
    get_local $var5
    return
  )
  (data (i32.const 0)
    "\00\00\00\00"
  )
)
